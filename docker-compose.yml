services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.1.3
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.http.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.http.ssl.key=/usr/share/elasticsearch/config/certs/http_ca.key
      - xpack.security.transport.ssl.key=/usr/share/elasticsearch/config/certs/http_ca.key
      - xpack.security.http.ssl.certificate=/usr/share/elasticsearch/config/certs/http_ca.crt
      - xpack.security.transport.ssl.certificate=/usr/share/elasticsearch/config/certs/http_ca.crt
      - xpack.security.http.ssl.certificate_authorities=/usr/share/elasticsearch/config/certs/auth_ca.crt
      - xpack.security.transport.ssl.certificate_authorities=/usr/share/elasticsearch/config/certs/auth_ca.crt
      - discovery.type=single-node
      - xpack.license.self_generated.type=trial
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - ./http_ca.key:/usr/share/elasticsearch/config/certs/http_ca.key
      - ./http_ca.crt:/usr/share/elasticsearch/config/certs/http_ca.crt
      - ./auth_ca.crt:/usr/share/elasticsearch/config/certs/auth_ca.crt
    ports:
      - "127.0.0.1:9200:9200"
      - "127.0.0.1:9300:9300"
    networks:
      - elastic
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail -u elastic:${ELASTIC_PASSWORD} localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 100

  fastapi:
    build: .
    container_name: fastapi
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - "127.0.0.1:8000:8000"
    environment:
      - ELASTIC_HOST=https://elasticsearch:9200
    networks:
      - elastic

networks:
  elastic:
    driver: bridge